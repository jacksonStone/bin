#!/usr/bin/env node
const someRepo = '/some/repo'
console.log("Running Green-Commit repeater")
const { spawn, spawnSync } = require('child_process');
const runGreencForBoth = ()=>{
  const { stdout: repoStdOut } = spawnSync('git', ['rev-parse', '--abbrev-ref', 'HEAD'], {
    cwd: someRepo,
    shell: "/bin/zsh"
  })
  const currentBranch = repoStdOut.toString()
  if (currentBranch.indexOf('master') !== -1 || currentBranch.indexOf('main') !== -1) {
    console.log("MAIN BRANCH - skipping...")
  } else {
    checkRepoForChanges()
  }
}


function checkRepoForChanges() {
  const diffResponseForBranch = spawnSync('git', ['diff'], {
    cwd: someRepo,
    shell: "/bin/zsh"
  })
  //Has changes
  if (diffResponseForBranch.stdout.toString().length) {
    spawn('source ~/.zshrc && npm run quick_test '+
    '&& (git commit -am "_TESTS PASSED COMMIT_" && squash_greenc && echo "Saved Repo..." || echo "Repo Unchanged...")', 
    {
      stdio: 'inherit',
      shell: "/bin/zsh",
      cwd: someRepo
    }).on('close', (code) => {
      if(code >= 1) {
        //Beep beep beep
        setTimeout(()=>process.stdout.write('\x07'), 0)
        setTimeout(()=>process.stdout.write('\x07'), 200)
        setTimeout(()=>process.stdout.write('\x07'), 400)
      }
    });
  }
  else {
    console.log("Repo UNCHANGED - skipping...")
  }
}

setInterval(runGreencForBoth, 1000*60*3)
runGreencForBoth()